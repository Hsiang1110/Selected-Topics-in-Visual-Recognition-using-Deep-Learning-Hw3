# -*- coding: utf-8 -*-
"""set.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bBWyRCKo_alWYuKXF4YMJSluX2_1CnXd
"""

!nvidia-smi

"""## 環境設置"""

!pip install Pillow==6.1

!pip install ninja yacs cython matplotlib tqdm opencv-python

# !pip install torch==1.0.0 torchvision==0.2.1
# !pip install torch==1.5.0 torchvision==0.6.0
!pip install torch==1.2.0 torchvision==0.4.0

!pip install ipython

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/

!git clone https://github.com/cocodataset/cocoapi.git

# Commented out IPython magic to ensure Python compatibility.
# %cd cocoapi/PythonAPI

!python setup.py build_ext install

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My Drive/

!git clone https://github.com/mcordts/cityscapesScripts.git

# Commented out IPython magic to ensure Python compatibility.
# %cd cityscapesScripts/

!python setup.py build_ext install

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/

!git clone https://github.com/NVIDIA/apex.git

# Commented out IPython magic to ensure Python compatibility.
# %cd apex

!pip install -v --no-cache-dir ./

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/

!git clone https://github.com/facebookresearch/maskrcnn-benchmark.git

# Commented out IPython magic to ensure Python compatibility.
# %cd maskrcnn-benchmark

!python setup.py build develop

import matplotlib.pyplot as plt
import matplotlib.pylab as pylab

import requests
from io import BytesIO
from PIL import Image
import numpy as np

"""## Demo 確認是否安裝成功"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/maskrcnn-benchmark

# this makes our figures bigger
pylab.rcParams['figure.figsize'] = 20, 12

from maskrcnn_benchmark.config import cfg
from demo.predictor import COCODemo

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/maskrcnn-benchmark

config_file = "/content/drive/MyDrive/maskrcnn-benchmark/configs/myconfig/e2e_mask_rcnn_R_50_FPN_1x.yaml"

# update the config options with the config file
cfg.merge_from_file(config_file)
# manual override some options
cfg.merge_from_list(["MODEL.DEVICE", "cpu"])

my_demo = COCODemo(
    cfg,
    min_image_size=800,
    confidence_threshold=0.7,
)

def load(url):
    """
    Given an url of an image, downloads the image and
    returns a PIL image
    """
    response = requests.get(url)
    pil_image = Image.open(BytesIO(response.content)).convert("RGB")
    # convert to BGR format
    image = np.array(pil_image)[:, :, [2, 1, 0]]
    return image

def imshow(img):
    plt.imshow(img[:, :, [2, 1, 0]])
    plt.axis("off")

import cv2
# from http://cocodataset.org/#explore?id=345434
# image = load("http://farm3.staticflickr.com/2469/3915380994_2e611b1779_z.jpg")
image = cv2.imread('/content/drive/MyDrive/maskrcnn-benchmark/datasets/coco/test/test_images/2007_001175.jpg')
imshow(image)

# compute predictions
predictions = my_demo.run_on_opencv_image(image)
imshow(predictions)

"""## 調整weight"""

import os
import torch
import argparse
from maskrcnn_benchmark.config import cfg
from maskrcnn_benchmark.utils.c2_model_loading import load_c2_format

_d=torch.load("/content/drive/MyDrive/maskrcnn-benchmark/weights/e2e_mask_rcnn_R_50_FPN_1x.pth")
newdict=_d
def removekey(d, listofkeys):
    r=d
    for key in listofkeys:
        del r[key]
    return r

newdict['model'] = removekey(_d['model'], ['module.roi_heads.box.predictor.cls_score.bias','module.roi_heads.box.predictor.cls_score.weight','module.roi_heads.box.predictor.bbox_pred.bias','module.roi_heads.box.predictor.bbox_pred.weight','module.roi_heads.mask.predictor.mask_fcn_logits.weight','module.roi_heads.mask.predictor.mask_fcn_logits.bias'])
torch.save(newdict, 'my.pth')

path="/content/drive/MyDrive/maskrcnn-benchmark/weights/e2e_mask_rcnn_R_50_FPN_1x.pth"

pretrained_weights = torch.load(path)['model']
newdict = {k.replace('module.',''):v for k, v in pretrained_weights.items()
  if 'cls_score' not in k and 'bbox_pred' not in k and 'mask_fcn_logits' not in k }
torch.save(newdict, 'my.pth')

"""## Train"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/maskrcnn-benchmark/maskrcnn_benchmark/data/datasets

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/maskrcnn-benchmark/

!python train_net.py --config-file configs/myconfig/e2e_mask_rcnn_R_50_FPN_1x.yaml